# coordinates messages
# some of the code is still copy paste from a tutorial

class Event(object):
    """
    A superclass for any event generated by an
    object and sent to EventManager.
    """

    def __init__(self):
        self.name = "Event"

    def __str__(self):
        return self.name


class QuitEvent(Event):

    def __init__(self):
        self.name = "Quit event"


class InputEvent(Event):
    """
    Input event (keyboard/mouse).
    """

    def __init__(self, unicodechar, clickpos):
        self.name = "Input event"
        self.char = unicodechar
        self.clickpos = clickpos

    def __str__(self):
        return '%s, char=%s, clickpos=%s' % (self.name, self.char, self.clickpos)


class InitializeEvent(Event):
    """
    Tells all listeners to initialize themselves.
    This includes loading libraries and resources.

    Better than initializing within listener __init__ calls
    (some might rely on others that are not yet created)
    """

    def __init__(self):
        self.name = "Initialize event"


class EventManager(object):
    """
    Coordinate communication between Model, View, and Controller.
    """

    def __init__(self):
        from weakref import WeakKeyDictionary
        self.listeners = WeakKeyDictionary()

    def RegisterListener(self, listener):
        """ 
        Adds a listener to our spam list. 
        It will receive Post()ed events through it's notify(event) call. 
        """

        self.listeners[listener] = 1

    def UnregisterListener(self, listener):
        """ 
        Remove a listener from our spam list.
        This is implemented but hardly used.
        Our weak ref spam list will auto remove any listeners who stop existing.
        """

        if listener in self.listeners.keys():
            del self.listeners[listener]

    def Post(self, event):
        """
        Post a new event to the message queue.
        It will be broadcast to all listeners.
        """

        for listener in self.listeners.keys():
            listener.notify(event)
